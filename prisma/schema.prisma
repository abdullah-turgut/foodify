// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  authId      String @unique
  first_name  String
  last_name   String
  email       String
  phone       String
  order_count Int    @default(0)

  adress Adress[]
  cart   Cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Adress {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  city        String
  town        String
  full_adress String

  userId String? @db.ObjectId
  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  items  Menu[]

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @db.ObjectId

  Restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  restaurantId String?     @db.ObjectId

  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Restaurant {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  authId      String  @unique
  name        String
  city        String
  town        String
  full_adress String
  open        String
  close       String
  imageUrl    String
  active      Boolean @default(false)

  menu   Menu[]
  orders Cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Menu {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  ingredients String
  category    Category
  available   Boolean  @default(true)
  price       Float

  restaurantId String     @db.ObjectId
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)

  cartId String? @db.ObjectId
  Cart   Cart?   @relation(fields: [cartId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Category {
  STARTER
  FASTFOOD
  MENU
  STEAK
  CHICKEN
  SEAFOOD
  PASTA
  SOUP
  PIZZA
  BURGER
  SANDWICH
  DESSERT
  DRINKS
  OTHER
}
